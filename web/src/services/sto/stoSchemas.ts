/**
 * Generated by @openapi-codegen
 *
 * @version 1.0.0
 */
/**
 * Account Usage
 *
 * @example {"accountId":"BdsgiWzwT7CQFeJl9XkQ3A","developerCount":25,"scanCount":5000}
 */
export type AccountUsage = {
  /**
   * Account ID
   *
   * @example BdsgiWzwT7CQFeJl9XkQ3A
   */
  accountId: string
  /**
   * Developer count
   *
   * @example 25
   * @format int64
   */
  developerCount: number
  /**
   * Scan count
   *
   * @example 5000
   * @format int64
   */
  scanCount: number
}

/**
 * @example {"approverId":"user111111111111111111"}
 */
export type ApproveExemptionRequestBody = {
  /**
   * User ID the user who approved or rejected this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  approverId: string
}

/**
 * @example {"remediationSteps":"Quia nostrum qui."}
 */
export type AugmentRemediationResult = {
  /**
   * The AI-augmented remediation steps
   *
   * @example Vero soluta consectetur omnis aut sapiente et.
   */
  remediationSteps: string
}

/**
 * @example {"executionIds":["Vero laborum est necessitatibus repellendus asperiores.","Et veritatis est quis.","Sunt amet quasi ea optio nostrum labore."]}
 */
export type BaselineExecutions = {
  /**
   * Harness Execution IDs of the most recent baseline scans
   *
   * @example Quaerat consequatur illum consequatur ad est porro.
   * @example Praesentium et ipsam ab maiores esse et.
   * @example Suscipit rerum.
   * @example Ut deserunt qui omnis aut.
   */
  executionIds: string[]
}

/**
 * @example {"expiration":1651578240,"issueId":"abcdef1234567890ghijkl","link":"https://example.com/ABC-1234","pendingChanges":{"durationDays":7},"pipelineId":"your_pipeline","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","targetId":"abcdef1234567890ghijkl","type":"Other"}
 */
export type CreateExemptionRequestBody = {
  /**
   * Unix timestamp at which this Exemption will expire
   *
   * @example 1651578240
   * @format int64
   */
  expiration?: number
  /**
   * Issue ID associated with the Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  issueId: string
  /**
   * Link to a related ticket
   *
   * @example https://example.com/ABC-1234
   * @maxLength 1024
   */
  link?: string
  pendingChanges: PendingChanges
  /**
   * ID of the Harness Pipeline to which the exemption applies. You must also specify "projectId" and "orgId". Cannot be specified alongside "targetId".
   *
   * @example your_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId?: string
  /**
   * Text describing why this Exemption is necessary
   *
   * @example Waiting on upstream bug fix
   * @maxLength 1024
   */
  reason: string
  /**
   * User ID of user who requested this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  requesterId: string
  /**
   * ID of the Target to which the exemption applies. Cannot be specified alongside "projectId" or "pipelineId".
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId?: string
  /**
   * Type of Exemption (Compensating Controls / Acceptable Use / Acceptable Risk / False Positive / Fix Unavailable / Other)
   *
   * @example Other
   */
  type: 'Compensating Controls' | 'Acceptable Use' | 'Acceptable Risk' | 'False Positive' | 'Fix Unavailable' | 'Other'
}

/**
 * @example {"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","keyPattern":["library_name","library_version"],"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","scanId":"abcdef1234567890ghijkl","severity":8.5,"severityCode":"High","subproduct":"product","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
 */
export type CreateIssueRequestBody = {
  /**
   * Issue details common to all occurrences
   *
   * @example {"package":"json-schema","version":"v0.2.3"}
   */
  details: {
    [key: string]: any
  }
  /**
   * ID of the associated Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  exemptionId?: string
  /**
   * Compression/deduplication key
   *
   * @example json-schema@0.2.3
   * @maxLength 512
   */
  key: string
  /**
   * The pattern of fields used to generate this Security Issue's Key
   *
   * @example library_name
   * @example library_version
   */
  keyPattern: string[]
  /**
   * Array of details unique to each occurrence
   *
   * @example {"line":"42"}
   * @example {"line":"666"}
   */
  occurrences?: {
    [key: string]: any
  }[]
  /**
   * The scan tool that identified this Security Issue
   *
   * @example product1234567890abcde
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /**
   * The Security Scan execution that detected this Security Issue
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  scanId: string
  /**
   * Numeric severity, from 0 (lowest) to 10 (highest)
   *
   * @example 8.5
   * @format float
   */
  severity: number
  /**
   * Severity code
   *
   * @example High
   */
  severityCode: 'Critical' | 'High' | 'Medium' | 'Low' | 'Info' | 'Unassigned'
  /**
   * The subproduct that identified this Security Issue
   *
   * @example product
   */
  subproduct?: string
  /**
   * Name of the associated Target and Variant
   *
   * @example nodegoat:master
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantName?: string
  /**
   * Title of the Security Issue
   *
   * @example json-schema@0.2.3 is vulnerable to Prototype Pollution
   * @maxLength 128
   */
  title: string
}

/**
 * @example {"executionId":"abcdef1234567890ghijkl","gitMetadata":{"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"},"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","subproduct":"owasp","targetVariantId":"variant111111111111111"}
 */
export type CreateScanRequestBody = {
  /**
   * Pipeline Execution ID associated with the Scan
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  executionId: string
  gitMetadata?: GitMetadata
  /**
   * Harness Organization ID
   *
   * @example your_harness_org
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId: string
  /**
   * Harness Organization ID
   *
   * @example your_harness_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId: string
  /**
   * The Scan Product used for the Scan
   *
   * @example product111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /**
   * Harness Project ID
   *
   * @example your_harness_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId: string
  /**
   * The Issue refinement version used for this Scan
   *
   * @example 1.0.5
   */
  refinementVersion: string
  /**
   * Pipeline Stage ID associated with the Scan
   *
   * @example stage_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stageId: string
  /**
   * Current status of the Scan
   *
   * @example Succeeded
   */
  status: 'Pending' | 'Running' | 'Succeeded' | 'Failed'
  /**
   * Pipeline Step ID associated with the Scan
   *
   * @example step_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stepId: string
  /**
   * The Scan Subproduct used for the Scan
   *
   * @example owasp
   * @format binary
   */
  subproduct?: Blob
  /**
   * The Target Variant associated with the Scan
   *
   * @example variant111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId: string
}

/**
 * @example {"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","directory":"app/src","name":"NodeGoat","type":"repository","url":"https://github.com/example/repo"}
 */
export type CreateTargetRequestBody = {
  /**
   * RegEx to match for dynamically selecting the Baseline for this Scan Target. Must be compatible with the RE2 standard.
   *
   * @example release_.*
   * @maxLength 128
   */
  baselineRegEx?: string
  /**
   * ID of baseline Target Variant for Issue comparison
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^([a-zA-Z0-9_-]{22}|)$
   */
  baselineVariantId?: string
  /**
   * Directory within the Test Target to be scanned
   *
   * @example app/src
   * @maxLength 1024
   */
  directory?: string
  /**
   * Name of the Test Target
   *
   * @example NodeGoat
   * @pattern ^[a-zA-Z0-9_.:/|()-]+$
   * @maxLength 128
   */
  name: string
  /**
   * Test Target's type
   *
   * @example repository
   */
  type: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * URL used to access the Test Target
   *
   * @example https://github.com/example/repo
   * @maxLength 1024
   */
  url?: string
}

/**
 * @example {"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","parameters":{"branch":"main"}}
 */
export type CreateTargetVariantRequestBody = {
  /**
   * Git Commit or Container Image hash
   *
   * @example d1998db4b4651a4b9be9ecf320a2dfb8b4710e35
   * @maxLength 64
   */
  hash?: string
  /**
   * Parameters for this Variant, as a JSON-encoded string
   *
   * @example {"branch":"main"}
   */
  parameters: {
    [key: string]: string
  }
}

/**
 * @example {"executionId":"abcdef1234567890ghijkl"}
 */
export type ExecutionIDResult = {
  /**
   * Harness Execution ID
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  executionId: string
}

/**
 * Information about an Exemption
 *
 * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pendingChanges":{"durationDays":7},"pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Pending","targetId":"abcdef1234567890ghijkl","type":"Other"}
 */
export type Exemption = {
  /**
   * User ID the user who approved or rejected this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  approverId?: string
  /**
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /**
   * Unix timestamp at which this Exemption will expire
   *
   * @example 1651578240
   * @format int64
   */
  expiration?: number
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /**
   * Issue ID associated with the Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  issueId: string
  /**
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /**
   * Link to a related ticket
   *
   * @example https://example.com/ABC-1234
   * @maxLength 1024
   */
  link?: string
  /**
   * ID of the Harness Organization to which the exemption applies. Cannot be specified alongside "targetId".
   *
   * @example your_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId?: string
  pendingChanges: PendingChanges
  /**
   * ID of the Harness Pipeline to which the exemption applies. You must also specify "projectId" and "orgId". Cannot be specified alongside "targetId".
   *
   * @example your_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId?: string
  /**
   * ID of the Harness Project to which the exemption applies. You must also specify "orgId". Cannot be specified alongside "targetId".
   *
   * @example your_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId?: string
  /**
   * Text describing why this Exemption is necessary
   *
   * @example Waiting on upstream bug fix
   * @maxLength 1024
   */
  reason: string
  /**
   * User ID of user who requested this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  requesterId: string
  /**
   * Approval status of Exemption
   *
   * @default Pending
   * @example Rejected
   */
  status: 'Pending' | 'Approved' | 'Rejected' | 'Expired'
  /**
   * ID of the Target to which the exemption applies. Cannot be specified alongside "projectId" or "pipelineId".
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId?: string
  /**
   * Type of Exemption (Compensating Controls / Acceptable Use / Acceptable Risk / False Positive / Fix Unavailable / Other)
   *
   * @example Other
   */
  type: 'Compensating Controls' | 'Acceptable Use' | 'Acceptable Risk' | 'False Positive' | 'Fix Unavailable' | 'Other'
}

export type ExemptionsCreateExemptionResponseBody = IDResult

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pendingChanges":{"durationDays":7},"pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Expired","targetId":"abcdef1234567890ghijkl","type":"Other"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pendingChanges":{"durationDays":7},"pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Expired","targetId":"abcdef1234567890ghijkl","type":"Other"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pendingChanges":{"durationDays":7},"pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Expired","targetId":"abcdef1234567890ghijkl","type":"Other"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pendingChanges":{"durationDays":7},"pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Expired","targetId":"abcdef1234567890ghijkl","type":"Other"}]}
 */
export type ExemptionsListExemptionsResponseBody = {
  pagination: Pagination
  /**
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pendingChanges":{"durationDays":7},"pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Expired","targetId":"abcdef1234567890ghijkl","type":"Other"}
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pendingChanges":{"durationDays":7},"pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Expired","targetId":"abcdef1234567890ghijkl","type":"Other"}
   */
  results: Exemption[]
}

export type FrontendExecutionForRepoResponseBody = ExecutionIDResult

/**
 * Exemption summary for frontend use
 *
 * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueSummary":{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},"lastModified":1651578240,"link":"Upstream bug","orgId":"STO","pendingChanges":{"durationDays":7},"pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Other"}
 */
export type FrontendExemption = {
  /**
   * User ID of the user who approved this Exemption
   *
   * @example user111111111111111111
   */
  approverId?: string
  /**
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /**
   * Unix timestamp at which this Exemption will expire
   *
   * @example 1651578240
   * @format int64
   */
  expiration?: number
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  issueSummary: IssueSummary
  /**
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /**
   * Link related to this Exemption
   *
   * @example Upstream bug
   */
  link?: string
  /**
   * ID of the Harness Org to which this Exemption applies
   *
   * @example STO
   */
  orgId?: string
  pendingChanges: PendingChanges
  /**
   * ID of the Harness pipeline to which this Exemption applies
   *
   * @example pipeline_1
   */
  pipelineId?: string
  /**
   * ID of the Harness project to which this Exemption applies
   *
   * @example STO
   */
  projectId?: string
  /**
   * Reason for Exemption
   *
   * @example Upstream bug
   */
  reason: string
  /**
   * User ID of the user who requested this Exemption
   *
   * @example user111111111111111111
   */
  requesterId: string
  /**
   * Status of this Exemption
   *
   * @example Approved
   */
  status: string
  /**
   * ID of Target to which this Exemption applies
   *
   * @example target2222222222222222
   */
  targetId?: string
  /**
   * Type of Exemption
   *
   * @example Other
   */
  type: string
}

export type FrontendExpiringExemptionsResponseBody = IssueSummaries

/**
 * @example {"active":150,"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17}
 */
export type FrontendIssueCounts = {
  /**
   * The total of active Issues
   *
   * @example 150
   * @format int32
   */
  active: number
  /**
   * The number of Critical-severity Issues
   *
   * @example 1
   * @format int32
   */
  critical: number
  /**
   * The number of High-severity Issues
   *
   * @example 3
   * @format int32
   */
  high: number
  /**
   * The number of Issues ignored due to Exemptions, and therefore not included in other counts
   *
   * @example 1
   * @format int32
   */
  ignored?: number
  /**
   * The number of Informational Issues
   *
   * @example 11
   * @format int32
   */
  info: number
  /**
   * The number of Low-severity Issues
   *
   * @example 39
   * @format int32
   */
  low: number
  /**
   * The number of Medium-severity Issues
   *
   * @example 17
   * @format int32
   */
  medium: number
}

export type FrontendIssueForExemptionResponseBody = IssueForExemptionResult

export type FrontendOverviewBaselinesResponseBody = BaselineExecutions

export type FrontendOverviewHistoricalCountsResponseBody = HistoricalCounts

export type FrontendPipelineSecurityIssuesResponseBody = PipelineSecurityIssuesResult

export type FrontendPipelineSecurityStepsResponseBody = PipelineSecurityStepsResult

export type FrontendSecurityReviewResponseBody = SecurityReviewResult

export type FrontendTestTargetsResponseBody = TestTargetResult

/**
 * @example {"critical":1,"externalPolicyFailures":0,"high":3,"ignored":1,"info":11,"low":39,"medium":17,"newCritical":1,"newHigh":3,"newInfo":11,"newLow":39,"newMedium":17,"newUnassigned":0,"unassigned":0}
 */
export type FullIssueCounts = {
  /**
   * The number of Critical-severity Issues
   *
   * @example 1
   * @format int32
   */
  critical: number
  /**
   * The number of EXTERNAL_POLICY Issues
   *
   * @example 0
   * @format int32
   */
  externalPolicyFailures: number
  /**
   * The number of High-severity Issues
   *
   * @example 3
   * @format int32
   */
  high: number
  /**
   * The number of Issues ignored due to Exemptions, and therefore not included in other counts
   *
   * @example 1
   * @format int32
   */
  ignored: number
  /**
   * The number of Informational Issues
   *
   * @example 11
   * @format int32
   */
  info: number
  /**
   * The number of Low-severity Issues
   *
   * @example 39
   * @format int32
   */
  low: number
  /**
   * The number of Medium-severity Issues
   *
   * @example 17
   * @format int32
   */
  medium: number
  /**
   * The number of new Critical-severity Issues
   *
   * @example 1
   * @format int32
   */
  newCritical: number
  /**
   * The number of new High-severity Issues
   *
   * @example 3
   * @format int32
   */
  newHigh: number
  /**
   * The number of new Informational Issues
   *
   * @example 11
   * @format int32
   */
  newInfo: number
  /**
   * The number of new Low-severity Issues
   *
   * @example 39
   * @format int32
   */
  newLow: number
  /**
   * The number of new Medium-severity Issues
   *
   * @example 17
   * @format int32
   */
  newMedium: number
  /**
   * The number of new Issues with no associated severity code
   *
   * @example 0
   * @format int32
   */
  newUnassigned: number
  /**
   * The number of Issues with no associated severity code
   *
   * @example 0
   * @format int32
   */
  unassigned: number
}

/**
 * @example {"description":"Delectus nulla omnis sunt ea quis.","extendedDescription":"Quod cumque aliquam.","remediationSteps":"Nam maiores tenetur dolores inventore eos officiis.","severity":8.5,"severityCode":"High"}
 */
export type GetByReferenceIDResponseBody = {
  /**
   * A short description of the identified issue.
   *
   * @example Impedit qui deleniti mollitia.
   */
  description?: string
  /**
   * A more detailed explanation of the issue and its potential impact.
   *
   * @example Aut id non et quia ipsam.
   */
  extendedDescription?: string
  /**
   * Steps the developer can take to address or mitigate the issue.
   *
   * @example Dolorem pariatur.
   */
  remediationSteps?: string
  /**
   * Numeric severity, from 0 (lowest) to 10 (highest)
   *
   * @example 8.5
   * @format double
   */
  severity?: number
  /**
   * Severity code
   *
   * @example High
   */
  severityCode?: string
}

/**
 * Git Metadata associated with the Scan
 *
 * @example {"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"}
 */
export type GitMetadata = {
  /**
   * Git Pull Request Number
   *
   * @example 11
   * @format int64
   */
  pullRequestNumber?: number
  /**
   * Git HTTP Repository
   *
   * @example https://github.com/harness/drone-cli.git
   */
  repositoryHttp?: string
  /**
   * Git SSH Repository
   *
   * @example git@github.com:harness/drone-cli.git
   */
  repositorySsh?: string
  /**
   * Git Source Branch
   *
   * @example feat/shiny-object
   */
  sourceBranch?: string
  /**
   * Git Target Branch
   *
   * @example develop
   */
  targetBranch?: string
}

/**
 * @example {"counts":[{"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"date":1651578240,"detections":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"remediations":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17}},{"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"date":1651578240,"detections":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"remediations":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17}},{"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"date":1651578240,"detections":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"remediations":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17}}]}
 */
export type HistoricalCounts = {
  /**
   * Counts of active issues on baselines for each of the past several days
   *
   * @example {"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"date":1651578240,"detections":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"remediations":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17}}
   * @example {"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"date":1651578240,"detections":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"remediations":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17}}
   */
  counts: HistoricalIssueCounts[]
}

/**
 * @example {"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"date":1651578240,"detections":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"remediations":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17}}
 */
export type HistoricalIssueCounts = {
  /**
   * True if at least one baseline was scanned on this date
   *
   * @example false
   */
  active: boolean
  counts: MinimalIssueCounts
  /**
   * @example 1651578240
   * @format int64
   */
  date: number
  detections: MinimalIssueCounts
  remediations: MinimalIssueCounts
}

/**
 * @example {"id":"abcdef1234567890ghijkl"}
 */
export type IDResult = {
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
}

/**
 * Information about a Security Issue
 *
 * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Earum officia et eos omnis temporibus vel.":"Sunt laboriosam nesciunt repellendus adipisci sunt dicta.","Laborum omnis impedit ratione iure voluptate corporis.":"Eos dolor tempore culpa.","Ut quia.":"Ipsa nostrum et occaecati."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
 */
export type Issue = {
  /**
   * The Baseline Target Variant related to this Security Issue
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  baselineVariantId?: string
  /**
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /**
   * Issue details common to all occurrences
   *
   * @example {"package":"json-schema","version":"v0.2.3"}
   */
  details: {
    [key: string]: any
  }
  /**
   * ID of the associated Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  exemptionId?: string
  /**
   * Harness Augmentation details
   *
   * @example {"Quaerat aut provident quia autem.":"Voluptatem enim non tempora et in nostrum.","Quia enim quos reiciendis.":"Animi voluptas facilis tempore facere."}
   */
  harnessAugmentation?: {
    [key: string]: any
  }
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /**
   * Compression/deduplication key
   *
   * @example json-schema@0.2.3
   * @maxLength 512
   */
  key: string
  /**
   * @example 12345
   * @format int64
   * @minimum 1
   */
  occurrenceId?: number
  /**
   * Array of details unique to each occurrence
   *
   * @example {"line":"42"}
   * @example {"line":"666"}
   */
  occurrences?: {
    [key: string]: any
  }[]
  /**
   * The scan tool that identified this Security Issue
   *
   * @example product1234567890abcde
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /**
   * Numeric severity, from 0 (lowest) to 10 (highest)
   *
   * @example 8.5
   * @format float
   */
  severity: number
  /**
   * Severity code
   *
   * @example High
   */
  severityCode: 'Critical' | 'High' | 'Medium' | 'Low' | 'Info' | 'Unassigned'
  /**
   * Indicates if the Security Issue was found to be remediated, ignored, etc.
   *
   * @example Remediated
   */
  status?:
    | 'Remediated'
    | 'Compensating Controls'
    | 'Acceptable Use'
    | 'Acceptable Risk'
    | 'False Positive'
    | 'Fix Unavailable'
    | 'Exempted'
  /**
   * The subproduct that identified this Security Issue
   *
   * @example product
   */
  subproduct?: string
  /**
   * The Target that this Security Issue affects
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId?: string
  /**
   * The Name of the Target that this Security Issue affects
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetName?: string
  /**
   * The type of the Target that this Security Issue affects
   *
   * @example repository
   */
  targetType?: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * The Target Variant that this Security Issue affects
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId?: string
  /**
   * Name of the associated Target and Variant
   *
   * @example nodegoat:master
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantName?: string
  /**
   * Title of the Security Issue
   *
   * @example json-schema@0.2.3 is vulnerable to Prototype Pollution
   * @maxLength 128
   */
  title: string
}

/**
 * The count of Security Issues, by severity code, for a given Harness Pipeline Execution
 *
 * @example {"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17,"newCritical":1,"newHigh":3,"newInfo":11,"newLow":39,"newMedium":17,"newUnassigned":0,"unassigned":0}
 */
export type IssueCounts = {
  /**
   * The number of Critical-severity Issues
   *
   * @example 1
   * @format int32
   */
  critical: number
  /**
   * The number of High-severity Issues
   *
   * @example 3
   * @format int32
   */
  high: number
  /**
   * The number of Issues ignored due to Exemptions, and therefore not included in other counts
   *
   * @example 1
   * @format int32
   */
  ignored?: number
  /**
   * The number of Informational Issues
   *
   * @example 11
   * @format int32
   */
  info: number
  /**
   * The number of Low-severity Issues
   *
   * @example 39
   * @format int32
   */
  low: number
  /**
   * The number of Medium-severity Issues
   *
   * @example 17
   * @format int32
   */
  medium: number
  /**
   * The number of new Critical-severity Issues
   *
   * @example 1
   * @format int32
   */
  newCritical?: number
  /**
   * The number of new High-severity Issues
   *
   * @example 3
   * @format int32
   */
  newHigh?: number
  /**
   * The number of new Informational Issues
   *
   * @example 11
   * @format int32
   */
  newInfo?: number
  /**
   * The number of new Low-severity Issues
   *
   * @example 39
   * @format int32
   */
  newLow?: number
  /**
   * The number of new Medium-severity Issues
   *
   * @example 17
   * @format int32
   */
  newMedium?: number
  /**
   * The number of new Issues with no associated severity code
   *
   * @example 0
   * @format int32
   */
  newUnassigned?: number
  /**
   * The number of Issues with no associated severity code
   *
   * @example 0
   * @format int32
   */
  unassigned?: number
}

/**
 * The count of Security Issues, by severity code, for a given Harness Pipeline Execution along with this execution info
 *
 * @example {"artifactFingerprint":"m4i","critical":1,"executionId":"abcdef1234567890ghijkl","high":3,"ignored":1,"info":11,"lastScanned":1634836529,"low":39,"medium":17,"pipelineId":"example_pipeline","targetId":"abcdef1234567890ghijkl","targetName":"NodeGoat","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"NodeGoat","type":"repository"}
 */
export type IssueCountsWithExecutionInfo = {
  /**
   * Fingerprint which identifies an artifact
   *
   * @example 5ws
   * @maxLength 64
   */
  artifactFingerprint?: string
  /**
   * The number of Critical-severity Issues
   *
   * @example 1
   * @format int32
   */
  critical: number
  /**
   * Harness Execution ID
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  executionId: string
  /**
   * The number of High-severity Issues
   *
   * @example 3
   * @format int32
   */
  high: number
  /**
   * The number of Issues ignored due to Exemptions, and therefore not included in other counts
   *
   * @example 1
   * @format int32
   */
  ignored?: number
  /**
   * The number of Informational Issues
   *
   * @example 11
   * @format int32
   */
  info: number
  /**
   * Timestamp at which the target variant was last scanned
   *
   * @example 1634836529
   * @format int64
   */
  lastScanned: number
  /**
   * The number of Low-severity Issues
   *
   * @example 39
   * @format int32
   */
  low: number
  /**
   * The number of Medium-severity Issues
   *
   * @example 17
   * @format int32
   */
  medium: number
  /**
   * Harness Pipeline ID
   *
   * @example example_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId: string
  /**
   * Associated Target ID
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId: string
  /**
   * Name of the Scan Target
   *
   * @example NodeGoat
   */
  targetName: string
  /**
   * Associated Target Variant ID
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId: string
  /**
   * Name of the Scan Target
   *
   * @example NodeGoat
   */
  targetVariantName: string
  /**
   * Scan Target's type
   *
   * @example repository
   */
  type: 'container' | 'repository' | 'instance' | 'configuration'
}

/**
 * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Cupiditate adipisci quas vitae.":"Tenetur perferendis."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"occurrencesPagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","targets":[{"targetId":"target2222222222222222","targetName":"Target 1"}],"title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
 */
export type IssueForExemptionResult = {
  /**
   * The Baseline Target Variant related to this Security Issue
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  baselineVariantId?: string
  /**
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /**
   * Issue details common to all occurrences
   *
   * @example {"package":"json-schema","version":"v0.2.3"}
   */
  details: {
    [key: string]: any
  }
  /**
   * ID of the associated Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  exemptionId?: string
  /**
   * Harness Augmentation details
   *
   * @example {"Magni pariatur quod.":"Quisquam occaecati.","Omnis maiores eaque aut.":"Aperiam aspernatur.","Qui voluptas illum aut et veritatis dolores.":"Ut accusamus eum numquam."}
   */
  harnessAugmentation?: {
    [key: string]: any
  }
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /**
   * Compression/deduplication key
   *
   * @example json-schema@0.2.3
   * @maxLength 512
   */
  key: string
  /**
   * @example 12345
   * @format int64
   * @minimum 1
   */
  occurrenceId?: number
  /**
   * Array of details unique to each occurrence
   *
   * @example {"line":"42"}
   * @example {"line":"666"}
   */
  occurrences?: {
    [key: string]: any
  }[]
  occurrencesPagination?: Pagination
  /**
   * The scan tool that identified this Security Issue
   *
   * @example product1234567890abcde
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /**
   * Numeric severity, from 0 (lowest) to 10 (highest)
   *
   * @example 8.5
   * @format float
   */
  severity: number
  /**
   * Severity code
   *
   * @example High
   */
  severityCode: 'Critical' | 'High' | 'Medium' | 'Low' | 'Info' | 'Unassigned'
  /**
   * Indicates if the Security Issue was found to be remediated, ignored, etc.
   *
   * @example Remediated
   */
  status?:
    | 'Remediated'
    | 'Compensating Controls'
    | 'Acceptable Use'
    | 'Acceptable Risk'
    | 'False Positive'
    | 'Fix Unavailable'
    | 'Exempted'
  /**
   * The subproduct that identified this Security Issue
   *
   * @example product
   */
  subproduct?: string
  /**
   * The Target that this Security Issue affects
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId?: string
  /**
   * The Name of the Target that this Security Issue affects
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetName?: string
  /**
   * The type of the Target that this Security Issue affects
   *
   * @example repository
   */
  targetType: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * The Target Variant that this Security Issue affects
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId?: string
  /**
   * Name of the associated Target and Variant
   *
   * @example nodegoat:master
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantName?: string
  /**
   * @example {"targetId":"target2222222222222222","targetName":"Target 1"}
   */
  targets: {
    [key: string]: any
  }[]
  /**
   * Title of the Security Issue
   *
   * @example json-schema@0.2.3 is vulnerable to Prototype Pollution
   * @maxLength 128
   */
  title: string
}

/**
 * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Autem odit unde cupiditate dolores debitis delectus.":"Incidunt itaque harum ut.","Praesentium non maxime cupiditate.":"Est dolorem.","Quos velit.":"Aut quo."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"occurrencesPagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"primaryOccurrenceId":12345,"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
 */
export type IssueInScan = {
  /**
   * The Baseline Target Variant related to this Security Issue
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  baselineVariantId?: string
  /**
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /**
   * Issue details common to all occurrences
   *
   * @example {"package":"json-schema","version":"v0.2.3"}
   */
  details: {
    [key: string]: any
  }
  /**
   * ID of the associated Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  exemptionId?: string
  /**
   * Harness Augmentation details
   *
   * @example {"Fuga odit est quo fugit sed.":"Nam dignissimos ab quisquam."}
   */
  harnessAugmentation?: {
    [key: string]: any
  }
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /**
   * Compression/deduplication key
   *
   * @example json-schema@0.2.3
   * @maxLength 512
   */
  key: string
  /**
   * @example 12345
   * @format int64
   * @minimum 1
   */
  occurrenceId?: number
  /**
   * Array of details unique to each occurrence
   *
   * @example {"line":"42"}
   * @example {"line":"666"}
   */
  occurrences?: {
    [key: string]: any
  }[]
  occurrencesPagination: Pagination
  /**
   * The primary occurrence's ID
   *
   * @example 12345
   * @format int64
   */
  primaryOccurrenceId: number
  /**
   * The scan tool that identified this Security Issue
   *
   * @example product1234567890abcde
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /**
   * Numeric severity, from 0 (lowest) to 10 (highest)
   *
   * @example 8.5
   * @format float
   */
  severity: number
  /**
   * Severity code
   *
   * @example High
   */
  severityCode: 'Critical' | 'High' | 'Medium' | 'Low' | 'Info' | 'Unassigned'
  /**
   * Indicates if the Security Issue was found to be remediated, ignored, etc.
   *
   * @example Remediated
   */
  status?:
    | 'Remediated'
    | 'Compensating Controls'
    | 'Acceptable Use'
    | 'Acceptable Risk'
    | 'False Positive'
    | 'Fix Unavailable'
    | 'Exempted'
  /**
   * The subproduct that identified this Security Issue
   *
   * @example product
   */
  subproduct?: string
  /**
   * The Target that this Security Issue affects
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId?: string
  /**
   * The Name of the Target that this Security Issue affects
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetName?: string
  /**
   * The type of the Target that this Security Issue affects
   *
   * @example repository
   */
  targetType?: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * The Target Variant that this Security Issue affects
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId?: string
  /**
   * Name of the associated Target and Variant
   *
   * @example nodegoat:master
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantName?: string
  /**
   * Title of the Security Issue
   *
   * @example json-schema@0.2.3 is vulnerable to Prototype Pollution
   * @maxLength 128
   */
  title: string
}

/**
 * List of issue summaries
 *
 * @example {"issues":[{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}]}
 */
export type IssueSummaries = {
  /**
   * Short summary of an Issue
   *
   * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   */
  issues: IssueSummary[]
}

/**
 * Short summary of an Issue
 *
 * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
 */
export type IssueSummary = {
  /**
   * ID of the associated Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  exemptionId?: string
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /**
   * Compression/deduplication key
   *
   * @example json-schema@0.2.3
   * @maxLength 512
   */
  key: string
  /**
   * Indicates the issue has been overridden
   *
   * @example {"originalSeverity":"medium","reason":"snyk"}
   */
  override?: {
    [key: string]: any
  }
  /**
   * The ID of the Scan that detected this Security Issue
   *
   * @example scan111111111111111111
   */
  scanId: string
  /**
   * Numeric severity, from 0 (lowest) to 10 (highest)
   *
   * @example 8.5
   * @format float
   */
  severity: number
  /**
   * Severity code
   *
   * @example High
   */
  severityCode: 'Critical' | 'High' | 'Medium' | 'Low' | 'Info' | 'Unassigned'
  /**
   * Indicates if the Security Issue was found to be remediated, ignored, etc.
   *
   * @example Remediated
   */
  status?:
    | 'Remediated'
    | 'Compensating Controls'
    | 'Acceptable Use'
    | 'Acceptable Risk'
    | 'False Positive'
    | 'Fix Unavailable'
    | 'Exempted'
  /**
   * Name of the associated Target and Variant
   *
   * @example nodegoat:master
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantName?: string
  /**
   * Title of the Security Issue
   *
   * @example json-schema@0.2.3 is vulnerable to Prototype Pollution
   * @maxLength 128
   */
  title: string
}

/**
 * @example {"occurrenceId":12345,"referenceId":"CWE-123","scanId":"abcdefghijkl1234567890","userSnippet":"func example() int {\n  return 0\n}"}
 */
export type IssuesAugmentRemediationRequestBody = {
  /**
   * @example 12345
   * @format int64
   * @minimum 1
   */
  occurrenceId: number
  /**
   * @example CWE-123
   */
  referenceId?: string
  /**
   * The Scan ID to use as context for the Security Issue to augment
   *
   * @example abcdefghijkl1234567890
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  scanId: string
  /**
     * The user-supplied code snippet
     *
     * @example func example() int {
      return 0
    }
     * @minLength 1
     * @maxLength 1024
     */
  userSnippet?: string
}

export type IssuesIssuesAugmentRemediationResponseBody = AugmentRemediationResult

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}]}
 */
export type IssuesListIssuesResponseBody = {
  pagination: Pagination
  /**
   * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   */
  results: Issue[]
}

/**
 * The count of Security Issues, by severity code, for a given Harness Pipeline Execution
 *
 * @example {"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17}
 */
export type MinimalIssueCounts = {
  /**
   * The number of Critical-severity Issues
   *
   * @example 1
   * @format int32
   */
  critical: number
  /**
   * The number of High-severity Issues
   *
   * @example 3
   * @format int32
   */
  high: number
  /**
   * The number of Issues ignored due to Exemptions, and therefore not included in other counts
   *
   * @example 1
   * @format int32
   */
  ignored?: number
  /**
   * The number of Informational Issues
   *
   * @example 11
   * @format int32
   */
  info: number
  /**
   * The number of Low-severity Issues
   *
   * @example 39
   * @format int32
   */
  low: number
  /**
   * The number of Medium-severity Issues
   *
   * @example 17
   * @format int32
   */
  medium: number
}

/**
 * @example {"message":"Not Found","status":404}
 */
export type NotFound = {
  /**
   * @example Not Found
   */
  message: string
  /**
   * @default 404
   * @example 404
   * @format int64
   */
  status?: number
}

/**
 * @example {"issues":[{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}],"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12}}
 */
export type PaginatedIssueSummaries = {
  /**
   * Diff-ed Issues related to this scan step, resulting from a diff between a scan and its target's latest baseline scan (previous scan if no baseline)
   *
   * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   */
  issues: IssueSummary[]
  pagination: Pagination
}

/**
 * @example {"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12}
 */
export type Pagination = {
  /**
   * Link-based paging
   *
   * @example
   */
  link?: string
  /**
   * Page number (starting from 0)
   *
   * @example 4
   * @format int64
   */
  page: number
  /**
   * Requested page size
   *
   * @example 20
   * @format int64
   */
  pageSize: number
  /**
   * Total results available
   *
   * @example 230
   * @format int64
   */
  totalItems: number
  /**
   * Total pages available
   *
   * @example 12
   * @format int64
   */
  totalPages: number
}

/**
 * @example {"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","directory":"app/src","name":"NodeGoat","type":"repository","url":"https://github.com/example/repo"}
 */
export type PatchTargetRequestBody = {
  /**
   * RegEx to match for dynamically selecting the Baseline for this Scan Target. Must be compatible with the RE2 standard.
   *
   * @example release_.*
   * @maxLength 128
   */
  baselineRegEx?: string
  /**
   * ID of baseline Target Variant for Issue comparison
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^([a-zA-Z0-9_-]{22}|)$
   */
  baselineVariantId?: string
  /**
   * Directory within the Test Target to be scanned
   *
   * @example app/src
   * @maxLength 1024
   */
  directory?: string
  /**
   * Name of the Test Target
   *
   * @example NodeGoat
   * @pattern ^[a-zA-Z0-9_.:/|()-]+$
   * @maxLength 128
   */
  name?: string
  /**
   * Test Target's type
   *
   * @example repository
   */
  type?: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * URL used to access the Test Target
   *
   * @example https://github.com/example/repo
   * @maxLength 1024
   */
  url?: string
}

/**
 * @example {"durationDays":7}
 */
export type PendingChanges = {
  /**
   * The number of days an issue should be exempted for
   *
   * @example 7
   * @format int64
   */
  durationDays?: number
}

/**
 * @example {"existing":{"active":150,"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"new":{"active":150,"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"remediated":{"active":150,"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"totalActive":439182606725250500}
 */
export type PipelineSecurityCounts = {
  existing: FrontendIssueCounts
  ['new']: FrontendIssueCounts
  remediated: FrontendIssueCounts
  /**
   * @example 2838935333822565000
   * @format int64
   */
  totalActive: number
}

/**
 * Data needed by the PipelineSecurityView
 *
 * @example {"counts":{"existing":{"active":150,"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"new":{"active":150,"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"remediated":{"active":150,"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17},"totalActive":765657700281929200},"existing":{"issues":[{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}],"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12}},"matchingSteps":[{"stageId":"stage_id","stepId":"step_id"},{"stageId":"stage_id","stepId":"step_id"},{"stageId":"stage_id","stepId":"step_id"},{"stageId":"stage_id","stepId":"step_id"}],"new":{"issues":[{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}],"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12}}}
 */
export type PipelineSecurityIssuesResult = {
  counts: PipelineSecurityCounts
  existing: PaginatedIssueSummaries
  /**
   * @example {"stageId":"stage_id","stepId":"step_id"}
   * @example {"stageId":"stage_id","stepId":"step_id"}
   * @example {"stageId":"stage_id","stepId":"step_id"}
   */
  matchingSteps: StageStepID[]
  ['new']: PaginatedIssueSummaries
}

/**
 * @example {"steps":[{"baselineVariant":"branch: main","scanId":"scan111111111111111111","scanTool":"owasp","stageId":"stage_id","stepId":"step_id","targetId":"target1111111111111111","targetName":"The Target","targetType":"repository","targetVariant":"branch: feature"},{"baselineVariant":"branch: main","scanId":"scan111111111111111111","scanTool":"owasp","stageId":"stage_id","stepId":"step_id","targetId":"target1111111111111111","targetName":"The Target","targetType":"repository","targetVariant":"branch: feature"},{"baselineVariant":"branch: main","scanId":"scan111111111111111111","scanTool":"owasp","stageId":"stage_id","stepId":"step_id","targetId":"target1111111111111111","targetName":"The Target","targetType":"repository","targetVariant":"branch: feature"}]}
 */
export type PipelineSecurityStepsResult = {
  /**
   * @example {"baselineVariant":"branch: main","scanId":"scan111111111111111111","scanTool":"owasp","stageId":"stage_id","stepId":"step_id","targetId":"target1111111111111111","targetName":"The Target","targetType":"repository","targetVariant":"branch: feature"}
   * @example {"baselineVariant":"branch: main","scanId":"scan111111111111111111","scanTool":"owasp","stageId":"stage_id","stepId":"step_id","targetId":"target1111111111111111","targetName":"The Target","targetType":"repository","targetVariant":"branch: feature"}
   * @example {"baselineVariant":"branch: main","scanId":"scan111111111111111111","scanTool":"owasp","stageId":"stage_id","stepId":"step_id","targetId":"target1111111111111111","targetName":"The Target","targetType":"repository","targetVariant":"branch: feature"}
   */
  steps: StepInfo[]
}

/**
 * Information about a Scan Tool
 *
 * @example {"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"}
 */
export type Product = {
  /**
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /**
   * Scan Tool's description
   *
   * @example OWASP 5.x SCA scanner
   */
  description: string
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /**
   * 'true' if this Scan Tool is enabled for use
   *
   * @example true
   */
  isEnabled: boolean
  /**
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /**
   * Name of the Scan Tool
   *
   * @example owasp
   */
  name: string
}

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"},{"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"}]}
 */
export type ProductsListProductsResponseBody = {
  pagination: Pagination
  /**
   * @example {"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"}
   * @example {"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"}
   */
  results: Product[]
}

/**
 * Information about a Security Test Scan
 *
 * @example {"created":1651578240,"executionId":"abcdef1234567890ghijkl","gitMetadata":{"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"},"id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","subproduct":"owasp","targetVariantId":"variant111111111111111"}
 */
export type Scan = {
  /**
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /**
   * Pipeline Execution ID associated with the Scan
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  executionId: string
  gitMetadata?: GitMetadata
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /**
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /**
   * Harness Organization ID
   *
   * @example your_harness_org
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId: string
  /**
   * Harness Organization ID
   *
   * @example your_harness_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId: string
  /**
   * The Scan Product used for the Scan
   *
   * @example product111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /**
   * Harness Project ID
   *
   * @example your_harness_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId: string
  /**
   * The Issue refinement version used for this Scan
   *
   * @example 1.0.5
   */
  refinementVersion: string
  /**
   * Pipeline Stage ID associated with the Scan
   *
   * @example stage_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stageId: string
  /**
   * Current status of the Scan
   *
   * @example Succeeded
   */
  status: 'Pending' | 'Running' | 'Succeeded' | 'Failed'
  /**
   * Pipeline Step ID associated with the Scan
   *
   * @example step_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stepId: string
  /**
   * The Scan Subproduct used for the Scan
   *
   * @example owasp
   * @format binary
   */
  subproduct?: Blob
  /**
   * The Target Variant associated with the Scan
   *
   * @example variant111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId: string
}

/**
 * List of Issues
 *
 * @example {"issues":[{"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}]}
 */
export type ScanIssuesResult = {
  /**
   * List of Issues
   *
   * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","harnessAugmentation":{"Omnis et cum quia illo sed.":"Ut optio non amet."},"id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","occurrenceId":12345,"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","subproduct":"product","targetId":"abcdef1234567890ghijkl","targetName":"abcdef1234567890ghijkl","targetType":"repository","targetVariantId":"abcdef1234567890ghijkl","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   */
  issues: Issue[]
}

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"created":1651578240,"executionId":"abcdef1234567890ghijkl","gitMetadata":{"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"},"id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","subproduct":"owasp","targetVariantId":"variant111111111111111"},{"created":1651578240,"executionId":"abcdef1234567890ghijkl","gitMetadata":{"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"},"id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","subproduct":"owasp","targetVariantId":"variant111111111111111"}]}
 */
export type ScansListScansResponseBody = {
  pagination: Pagination
  /**
   * @example {"created":1651578240,"executionId":"abcdef1234567890ghijkl","gitMetadata":{"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"},"id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","subproduct":"owasp","targetVariantId":"variant111111111111111"}
   * @example {"created":1651578240,"executionId":"abcdef1234567890ghijkl","gitMetadata":{"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"},"id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","subproduct":"owasp","targetVariantId":"variant111111111111111"}
   * @example {"created":1651578240,"executionId":"abcdef1234567890ghijkl","gitMetadata":{"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"},"id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","subproduct":"owasp","targetVariantId":"variant111111111111111"}
   * @example {"created":1651578240,"executionId":"abcdef1234567890ghijkl","gitMetadata":{"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"},"id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","subproduct":"owasp","targetVariantId":"variant111111111111111"}
   */
  results: Scan[]
}

export type ScansScanIssueCountsResponseBody = FullIssueCounts

export type ScansScanIssueResponseBody = IssueInScan

export type ScansScanIssuesResponseBody = ScanIssuesResult

/**
 * Data needed by the Security Review page
 *
 * @example {"exemptions":[{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueSummary":{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},"lastModified":1651578240,"link":"Upstream bug","orgId":"STO","pendingChanges":{"durationDays":7},"pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Other"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueSummary":{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},"lastModified":1651578240,"link":"Upstream bug","orgId":"STO","pendingChanges":{"durationDays":7},"pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Other"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueSummary":{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},"lastModified":1651578240,"link":"Upstream bug","orgId":"STO","pendingChanges":{"durationDays":7},"pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Other"}]}
 */
export type SecurityReviewResult = {
  /**
   * Security Review data
   *
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueSummary":{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},"lastModified":1651578240,"link":"Upstream bug","orgId":"STO","pendingChanges":{"durationDays":7},"pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Other"}
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueSummary":{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},"lastModified":1651578240,"link":"Upstream bug","orgId":"STO","pendingChanges":{"durationDays":7},"pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Other"}
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueSummary":{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},"lastModified":1651578240,"link":"Upstream bug","orgId":"STO","pendingChanges":{"durationDays":7},"pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Other"}
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueSummary":{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","override":{"originalSeverity":"medium","reason":"snyk"},"scanId":"scan111111111111111111","severity":8.5,"severityCode":"High","status":"Remediated","targetVariantName":"nodegoat:master","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},"lastModified":1651578240,"link":"Upstream bug","orgId":"STO","pendingChanges":{"durationDays":7},"pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Other"}
   */
  exemptions: FrontendExemption[]
}

/**
 * @example {"commit":"96381692bf3a2bd7904769c6886e832435768b57","version":"v0.123.0"}
 */
export type ServiceVersion = {
  /**
   * Build identifier
   *
   * @example 96381692bf3a2bd7904769c6886e832435768b57
   */
  commit: string
  /**
   * Version number
   *
   * @example v0.123.0
   */
  version: string
}

/**
 * @example {"artifactFingerprints":["itw","m7b","ioz"],"targetVariants":[{"targetName":"Nihil culpa earum nemo.","targetType":"repository","targetVariantName":"Nobis error dolore ratione."},{"targetName":"Nihil culpa earum nemo.","targetType":"repository","targetVariantName":"Nobis error dolore ratione."},{"targetName":"Nihil culpa earum nemo.","targetType":"repository","targetVariantName":"Nobis error dolore ratione."}]}
 */
export type SscaExecutionArtifactSummaryRequestBody = {
  /**
   * Artifact fingerprints for lookup
   *
   * @example 5b3
   * @example h6c
   * @example awx
   * @maxItems 100
   */
  artifactFingerprints?: string[]
  /**
   * Target-variant pairs for lookup
   *
   * @example {"targetName":"Nihil culpa earum nemo.","targetType":"repository","targetVariantName":"Nobis error dolore ratione."}
   * @example {"targetName":"Nihil culpa earum nemo.","targetType":"repository","targetVariantName":"Nobis error dolore ratione."}
   * @example {"targetName":"Nihil culpa earum nemo.","targetType":"repository","targetVariantName":"Nobis error dolore ratione."}
   * @maxItems 100
   */
  targetVariants?: TargetAndVariantNameRequired[]
}

/**
 * @example {"targetVariants":[{"targetName":"Velit vero sit.","targetType":"repository","targetVariantName":"Aperiam minima rerum ab impedit quia."},{"targetName":"Velit vero sit.","targetType":"repository","targetVariantName":"Aperiam minima rerum ab impedit quia."},{"targetName":"Velit vero sit.","targetType":"repository","targetVariantName":"Aperiam minima rerum ab impedit quia."}]}
 */
export type SscaExecutionIssueCountsRequestBody = {
  /**
   * Target-variant pairs for lookup
   *
   * @example {"targetName":"Velit vero sit.","targetType":"repository","targetVariantName":"Aperiam minima rerum ab impedit quia."}
   * @example {"targetName":"Velit vero sit.","targetType":"repository","targetVariantName":"Aperiam minima rerum ab impedit quia."}
   * @example {"targetName":"Velit vero sit.","targetType":"repository","targetVariantName":"Aperiam minima rerum ab impedit quia."}
   * @maxItems 100
   */
  targetVariants?: TargetAndVariantName[]
}

/**
 * @example {"stageId":"stage_id","stepId":"step_id"}
 */
export type StageStepID = {
  /**
   * @example stage_id
   */
  stageId: string
  /**
   * @example step_id
   */
  stepId: string
}

/**
 * @example {"status":"ok"}
 */
export type Status = {
  /**
   * Status
   *
   * @example ok
   */
  status: string
}

/**
 * Information about a Scan Step
 *
 * @example {"baselineVariant":"branch: main","scanId":"scan111111111111111111","scanTool":"owasp","stageId":"stage_id","stepId":"step_id","targetId":"target1111111111111111","targetName":"The Target","targetType":"repository","targetVariant":"branch: feature"}
 */
export type StepInfo = {
  /**
   * A short description of the baseline target variant for the pipeline step's scan diff
   *
   * @example branch: main
   */
  baselineVariant?: string
  /**
   * Scan id
   *
   * @example scan111111111111111111
   */
  scanId: string
  /**
   * Product name of the scan tool used in this step
   *
   * @example owasp
   */
  scanTool: string
  /**
   * @example stage_id
   */
  stageId: string
  /**
   * @example step_id
   */
  stepId: string
  /**
   * The ID of the target of the pipeline step's scan
   *
   * @example target1111111111111111
   */
  targetId: string
  /**
   * The name of the target of the pipeline step's scan
   *
   * @example The Target
   */
  targetName: string
  /**
   * The type of the target of the pipeline step's scan
   *
   * @example repository
   */
  targetType: 'repository' | 'container' | 'instance' | 'configuration'
  /**
   * A short description of the target variant of the pipeline step's scan
   *
   * @example branch: feature
   */
  targetVariant: string
}

/**
 * @example {"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"}
 */
export type Target = {
  /**
   * RegEx to match for dynamically selecting the Baseline for this Scan Target. Must be compatible with the RE2 standard.
   *
   * @example release_.*
   * @maxLength 128
   */
  baselineRegEx?: string
  /**
   * ID of baseline Target Variant for Issue comparison
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^([a-zA-Z0-9_-]{22}|)$
   */
  baselineVariantId?: string
  /**
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /**
   * Directory within the Test Target to be scanned
   *
   * @example app/src
   * @maxLength 1024
   */
  directory?: string
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /**
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /**
   * Name of the Test Target
   *
   * @example NodeGoat
   * @pattern ^[a-zA-Z0-9_.:/|()-]+$
   * @maxLength 128
   */
  name: string
  /**
   * Harness Organization ID
   *
   * @example example_org
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId: string
  /**
   * Harness Project ID
   *
   * @example example_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId: string
  /**
   * Test Target's type
   *
   * @example repository
   */
  type: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * URL used to access the Test Target
   *
   * @example https://github.com/example/repo
   * @maxLength 1024
   */
  url?: string
}

/**
 * @example {"targetName":"Molestias est neque.","targetType":"repository","targetVariantName":"Aut aliquam."}
 */
export type TargetAndVariantName = {
  /**
   * Target name
   *
   * @example Nobis modi animi est aperiam dolor.
   */
  targetName?: string
  /**
   * Type of target
   *
   * @example repository
   */
  targetType?: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * Variant name
   *
   * @example Aliquid ullam.
   */
  targetVariantName?: string
}

/**
 * @example {"targetName":"In magnam.","targetType":"repository","targetVariantName":"Aut quasi qui."}
 */
export type TargetAndVariantNameRequired = {
  /**
   * Target name
   *
   * @example Exercitationem unde beatae id est totam nisi.
   */
  targetName: string
  /**
   * Type of target
   *
   * @example repository
   */
  targetType: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * Variant name
   *
   * @example Ut vero sed nemo.
   */
  targetVariantName: string
}

/**
 * Information about a Scan Target Variant
 *
 * @example {"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":{"branch":"main"},"targetId":"abcdef1234567890ghijkl"}
 */
export type TargetVariant = {
  /**
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /**
   * Git Commit or Container Image hash
   *
   * @example d1998db4b4651a4b9be9ecf320a2dfb8b4710e35
   * @maxLength 64
   */
  hash?: string
  /**
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /**
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /**
   * Parameters for this Variant, as a JSON-encoded string
   *
   * @example {"branch":"main"}
   */
  parameters: {
    [key: string]: string
  }
  /**
   * Associated Target ID
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId: string
}

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":{"branch":"main"},"targetId":"abcdef1234567890ghijkl"},{"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":{"branch":"main"},"targetId":"abcdef1234567890ghijkl"}]}
 */
export type TargetVariantsListTargetVariantsResponseBody = {
  pagination: Pagination
  /**
   * @example {"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":{"branch":"main"},"targetId":"abcdef1234567890ghijkl"}
   * @example {"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":{"branch":"main"},"targetId":"abcdef1234567890ghijkl"}
   * @example {"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":{"branch":"main"},"targetId":"abcdef1234567890ghijkl"}
   */
  results: TargetVariant[]
}

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"},{"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"},{"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"},{"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"}]}
 */
export type TargetsListTargetsResponseBody = {
  pagination: Pagination
  /**
   * @example {"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"}
   * @example {"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"}
   */
  results: Target[]
}

/**
 * Individual TestTarget
 *
 * @example {"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"baselineRegEx":"release_.*","directory":"/","id":"target1111111111111111","lastScanned":1634836529,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]}
 */
export type TestTarget = {
  baseline?: TestTargetVariant
  /**
   * RegEx to match for dynamically selecting the Baseline for this Scan Target. Must be compatible with the RE2 standard.
   *
   * @example release_.*
   * @maxLength 128
   */
  baselineRegEx?: string
  /**
   * Directory of target
   *
   * @example /
   */
  directory?: string
  /**
   * ID of target
   *
   * @example target1111111111111111
   */
  id: string
  /**
   * Timestamp at which the Baseline was last scanned
   *
   * @example 1634836529
   * @format int64
   */
  lastScanned: number
  /**
   * Name of Target
   *
   * @example target 1
   */
  name: string
  /**
   * Type of target
   *
   * @example repository
   */
  type: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * Url of target
   *
   * @example github.com/harness/sto-core
   */
  url?: string
  /**
   * @example {"id":"variant111111111111111","name":"Branch: feature-1"}
   * @example {"id":"variant111111111111111","name":"Branch: feature-1"}
   */
  variants: TestTargetVariant[]
}

/**
 * Data needed by the Test Targets page
 *
 * @example {"targets":[{"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"baselineRegEx":"release_.*","directory":"/","id":"target1111111111111111","lastScanned":1634836529,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]},{"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"baselineRegEx":"release_.*","directory":"/","id":"target1111111111111111","lastScanned":1634836529,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]}],"targetsPagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12}}
 */
export type TestTargetResult = {
  /**
   * Test Targets data
   *
   * @example {"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"baselineRegEx":"release_.*","directory":"/","id":"target1111111111111111","lastScanned":1634836529,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]}
   * @example {"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"baselineRegEx":"release_.*","directory":"/","id":"target1111111111111111","lastScanned":1634836529,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]}
   * @example {"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"baselineRegEx":"release_.*","directory":"/","id":"target1111111111111111","lastScanned":1634836529,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]}
   */
  targets: TestTarget[]
  targetsPagination: Pagination
}

/**
 * Individual Test Target Variant
 *
 * @example {"id":"variant111111111111111","name":"Branch: feature-1"}
 */
export type TestTargetVariant = {
  /**
   * Target Variant ID
   *
   * @example variant111111111111111
   */
  id: string
  /**
   * Name of Target Variant
   *
   * @example Branch: feature-1
   */
  name: string
}

export type TokenResponse = {
  /**
   * Issued cross-service JWT
   *
   */
  token: string
}

/**
 * @example {"expiration":1651578240,"link":"https://example.com/ABC-1234","pendingChanges":{"durationDays":7},"pipelineId":"your_pipeline","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","targetId":"abcdef1234567890ghijkl","type":"Other"}
 */
export type UpdateExemptionRequestBody = {
  /**
   * Unix timestamp at which this Exemption will expire
   *
   * @example 1651578240
   * @format int64
   */
  expiration?: number
  /**
   * Link to a related ticket
   *
   * @example https://example.com/ABC-1234
   * @maxLength 1024
   */
  link?: string
  pendingChanges: PendingChanges
  /**
   * ID of the Harness Pipeline to which the exemption applies. You must also specify "projectId" and "orgId". Cannot be specified alongside "targetId".
   *
   * @example your_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId?: string
  /**
   * Text describing why this Exemption is necessary
   *
   * @example Waiting on upstream bug fix
   * @maxLength 1024
   */
  reason: string
  /**
   * User ID of user who requested this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  requesterId: string
  /**
   * ID of the Target to which the exemption applies. Cannot be specified alongside "projectId" or "pipelineId".
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId?: string
  /**
   * Type of Exemption (Compensating Controls / Acceptable Use / Acceptable Risk / False Positive / Fix Unavailable / Other)
   *
   * @example Other
   */
  type: 'Compensating Controls' | 'Acceptable Use' | 'Acceptable Risk' | 'False Positive' | 'Fix Unavailable' | 'Other'
}

/**
 * @example {"occurrences":[{"line":"42"},{"line":"666"}],"scanId":"abcdef1234567890ghijkl"}
 */
export type UpdateIssueRequestBody = {
  /**
   * Array of details unique to each occurrence
   *
   * @example {"line":"42"}
   * @example {"line":"666"}
   */
  occurrences: {
    [key: string]: any
  }[]
  /**
   * The Security Scan execution that detected this Security Issue
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  scanId: string
}

/**
 * @example {"artifactFingerprint":"abcdef1234567890ghijkl","executionId":"abcdef1234567890ghijkl","gitMetadata":{"pullRequestNumber":11,"repositoryHttp":"https://github.com/harness/drone-cli.git","repositorySsh":"git@github.com:harness/drone-cli.git","sourceBranch":"feat/shiny-object","targetBranch":"develop"},"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","subproduct":"owasp","targetVariantId":"variant111111111111111"}
 */
export type UpdateScanRequestBody = {
  /**
   * The Artifact Fingerprint used use to idenfiy the target
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[A-Za-z0-9_]*$
   * @maxLength 64
   */
  artifactFingerprint?: string
  /**
   * Pipeline Execution ID associated with the Scan
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  executionId: string
  gitMetadata?: GitMetadata
  /**
   * Harness Organization ID
   *
   * @example your_harness_org
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId: string
  /**
   * Harness Organization ID
   *
   * @example your_harness_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId: string
  /**
   * The Scan Product used for the Scan
   *
   * @example product111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /**
   * Harness Project ID
   *
   * @example your_harness_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId: string
  /**
   * The Issue refinement version used for this Scan
   *
   * @example 1.0.5
   */
  refinementVersion: string
  /**
   * Pipeline Stage ID associated with the Scan
   *
   * @example stage_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stageId: string
  /**
   * Current status of the Scan
   *
   * @example Succeeded
   */
  status: 'Pending' | 'Running' | 'Succeeded' | 'Failed'
  /**
   * Pipeline Step ID associated with the Scan
   *
   * @example step_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stepId: string
  /**
   * The Scan Subproduct used for the Scan
   *
   * @example owasp
   * @format binary
   */
  subproduct?: Blob
  /**
   * The Target Variant associated with the Scan
   *
   * @example variant111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId: string
}

/**
 * @example {"baselineRegEx":"release_.*","baselineVariantId":"abcdef1234567890ghijkl","directory":"app/src","name":"NodeGoat","type":"repository","url":"https://github.com/example/repo"}
 */
export type UpdateTargetRequestBody = {
  /**
   * RegEx to match for dynamically selecting the Baseline for this Scan Target. Must be compatible with the RE2 standard.
   *
   * @example release_.*
   * @maxLength 128
   */
  baselineRegEx?: string
  /**
   * ID of baseline Target Variant for Issue comparison
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^([a-zA-Z0-9_-]{22}|)$
   */
  baselineVariantId?: string
  /**
   * Directory within the Test Target to be scanned
   *
   * @example app/src
   * @maxLength 1024
   */
  directory?: string
  /**
   * Name of the Test Target
   *
   * @example NodeGoat
   * @pattern ^[a-zA-Z0-9_.:/|()-]+$
   * @maxLength 128
   */
  name: string
  /**
   * Test Target's type
   *
   * @example repository
   */
  type: 'container' | 'repository' | 'instance' | 'configuration'
  /**
   * URL used to access the Test Target
   *
   * @example https://github.com/example/repo
   * @maxLength 1024
   */
  url?: string
}

/**
 * @example {"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","parameters":{"branch":"main"}}
 */
export type UpdateTargetVariantRequestBody = {
  /**
   * Git Commit or Container Image hash
   *
   * @example d1998db4b4651a4b9be9ecf320a2dfb8b4710e35
   * @maxLength 64
   */
  hash?: string
  /**
   * Parameters for this Variant, as a JSON-encoded string
   *
   * @example {"branch":"main"}
   */
  parameters: {
    [key: string]: string
  }
}

/**
 * Usage
 *
 * @example {"count":0,"displayName":"Last 30 Days","references":["Sit unde.","Amet id atque.","Vel perferendis.","Atque quidem deserunt qui tempore omnis aut."]}
 */
export type Usage = {
  /**
   * Unit count
   *
   * @example 0
   * @format int64
   */
  count: number
  /**
   * Display name
   *
   * @example Last 30 Days
   */
  displayName: string
  /**
   * References
   *
   * @example Est sed.
   * @example Ut ad natus quae eos.
   * @example Quo iste odio quia.
   * @example Voluptas porro.
   */
  references: string[]
}

/**
 * All Accounts Usage Result
 *
 * @example {"timestamp":1670427991307,"usage":[{"accountId":"BdsgiWzwT7CQFeJl9XkQ3A","developerCount":25,"scanCount":5000},{"accountId":"BdsgiWzwT7CQFeJl9XkQ3A","developerCount":25,"scanCount":5000},{"accountId":"BdsgiWzwT7CQFeJl9XkQ3A","developerCount":25,"scanCount":5000}]}
 */
export type UsageAllAccountsResult = {
  /**
   * Timestamp
   *
   * @example 1670427991307
   * @format int64
   */
  timestamp: number
  /**
   * Usage of all accounts
   *
   * @example {"accountId":"BdsgiWzwT7CQFeJl9XkQ3A","developerCount":25,"scanCount":5000}
   * @example {"accountId":"BdsgiWzwT7CQFeJl9XkQ3A","developerCount":25,"scanCount":5000}
   * @example {"accountId":"BdsgiWzwT7CQFeJl9XkQ3A","developerCount":25,"scanCount":5000}
   */
  usage: AccountUsage[]
}

export type UsageReportUsageResponseBody = UsageResult

/**
 * Usage Result
 *
 * @example {"accountIdentifier":"BdsgiWzwT7CQFeJl9XkQ3A","activeDevelopers":{"count":0,"displayName":"Last 30 Days","references":["Iste dolorem.","Numquam officia vero ad nulla."]},"activeScans":{"count":0,"displayName":"Last 30 Days","references":["Iste dolorem.","Numquam officia vero ad nulla."]},"module":"STO","timestamp":1670427991307}
 */
export type UsageResult = {
  /**
   * Account identifier
   *
   * @example BdsgiWzwT7CQFeJl9XkQ3A
   */
  accountIdentifier: string
  activeDevelopers: Usage
  activeScans: Usage
  /**
   * Harness module
   *
   * @example STO
   */
  module: string
  /**
   * Timestamp
   *
   * @example 1670427991307
   * @format int64
   */
  timestamp: number
}

export type UsageUsageAllAccountsResponseBody = UsageAllAccountsResult
